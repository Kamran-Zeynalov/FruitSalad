// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaladBack.Data.DAL;

#nullable disable

namespace SaladBack.Data.Migrations
{
    [DbContext(typeof(SaladDbContext))]
    [Migration("20250319080824_SomeChanges")]
    partial class SomeChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SaladBack.Core.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("SaladBack.Core.Models.FruitSalad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("FruitSalads");
                });

            modelBuilder.Entity("SaladBack.Core.Models.FruitSaladFruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FruitId")
                        .HasColumnType("int");

                    b.Property<int>("FruitSaladId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FruitId");

                    b.HasIndex("FruitSaladId");

                    b.ToTable("FruitSaladFruits");
                });

            modelBuilder.Entity("SaladBack.Core.Models.SaladImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FruitSaladId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FruitSaladId");

                    b.ToTable("SaladImage");
                });

            modelBuilder.Entity("SaladBack.Core.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ccal")
                        .HasColumnType("int");

                    b.Property<int>("FruitSaladId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FruitSaladId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("SaladBack.Core.Nut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nuts");
                });

            modelBuilder.Entity("SaladBack.Core.Models.FruitSaladFruit", b =>
                {
                    b.HasOne("SaladBack.Core.Fruit", "Fruit")
                        .WithMany("FruitSaladFruits")
                        .HasForeignKey("FruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaladBack.Core.Models.FruitSalad", "FruitSalad")
                        .WithMany("FruitSaladFruits")
                        .HasForeignKey("FruitSaladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruit");

                    b.Navigation("FruitSalad");
                });

            modelBuilder.Entity("SaladBack.Core.Models.SaladImage", b =>
                {
                    b.HasOne("SaladBack.Core.Models.FruitSalad", "FruitSalad")
                        .WithMany("SaladImages")
                        .HasForeignKey("FruitSaladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FruitSalad");
                });

            modelBuilder.Entity("SaladBack.Core.Models.Size", b =>
                {
                    b.HasOne("SaladBack.Core.Models.FruitSalad", "FruitSalad")
                        .WithMany("Sizes")
                        .HasForeignKey("FruitSaladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FruitSalad");
                });

            modelBuilder.Entity("SaladBack.Core.Fruit", b =>
                {
                    b.Navigation("FruitSaladFruits");
                });

            modelBuilder.Entity("SaladBack.Core.Models.FruitSalad", b =>
                {
                    b.Navigation("FruitSaladFruits");

                    b.Navigation("SaladImages");

                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
